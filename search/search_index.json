{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. doc.md # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. doc.md # Other markdown pages, images and other files.","title":"Project layout"},{"location":"doc/","text":"Reference Calculator One method named: tribonacci - one parameter: n - one returned value: tribonacci of n using the recursive process Source code in evaluation-on-python-basics\\application.py 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 class Calculator : \"\"\" One method named: tribonacci - one parameter: n - one returned value: tribonacci of n using the recursive process \"\"\" def tribonacci ( self , n : int ) -> int : \"\"\"function that generates the Tribonacci serie of n using the recursive process Parameter --------- n (integer): value to compute the Tribonacci serie on. Return ------ tribo (integer): tribonacci of n using the recursive process. \"\"\" tribo_dict = { 0 : 0 , 1 : 0 , 2 : 1 , } # dictionary to store the start of the tribonacci serie # put your code here return tribo tribonacci ( n ) function that generates the Tribonacci serie of n using the recursive process Parameter n (integer): value to compute the Tribonacci serie on. Return tribo (integer): tribonacci of n using the recursive process. Source code in evaluation-on-python-basics\\application.py 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 def tribonacci ( self , n : int ) -> int : \"\"\"function that generates the Tribonacci serie of n using the recursive process Parameter --------- n (integer): value to compute the Tribonacci serie on. Return ------ tribo (integer): tribonacci of n using the recursive process. \"\"\" tribo_dict = { 0 : 0 , 1 : 0 , 2 : 1 , } # dictionary to store the start of the tribonacci serie # put your code here return tribo CalculatorApp 2 attributes: - a reader of type StdInputReader, or TextFileInputReader - a calculator of type CalculatorIterative or CalculatorRecursive 1 method named calculate: - to calculate the tribonacci of the number returned by the self.reader attribute - using the self.calculator attribute That method should return an integer Source code in evaluation-on-python-basics\\application.py 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 class CalculatorApp : \"\"\" 2 attributes: - a reader of type StdInputReader, or TextFileInputReader - a calculator of type CalculatorIterative or CalculatorRecursive 1 method named calculate: - to calculate the tribonacci of the number returned by the self.reader attribute - using the self.calculator attribute - That method should return an integer \"\"\" def __init__ ( self , reader , calculator ) -> None : self . reader = reader self . calculator = calculator def calculate ( self , ) -> int : \"\"\"function that calculates the tribonacci of the number returned by the self.reader attribute Return ------ tribo (integer): tribonacci value of the value read by the self.reader attribute. \"\"\" # put your code here return tribo calculate () function that calculates the tribonacci of the number returned by the self.reader attribute Return tribo (integer): tribonacci value of the value read by the self.reader attribute. Source code in evaluation-on-python-basics\\application.py 166 167 168 169 170 171 172 173 174 175 176 177 178 def calculate ( self , ) -> int : \"\"\"function that calculates the tribonacci of the number returned by the self.reader attribute Return ------ tribo (integer): tribonacci value of the value read by the self.reader attribute. \"\"\" # put your code here return tribo CalculatorBis One method named: tribonacci - one parameter: n - one returned value: tribonacci of n using the iterative process Source code in evaluation-on-python-basics\\application.py 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 class CalculatorBis : \"\"\" One method named: tribonacci - one parameter: n - one returned value: tribonacci of n using the iterative process \"\"\" def tribonacci ( self , n : int ) -> int : \"\"\"function that generates the Tribonacci serie of n iteratively Parameter --------- n (integer): value to compute the Tribonacci serie on. Return ------ tribo_value (integer): tribonacci of n using the iterative process. \"\"\" tribo_dict = { 0 : 0 , 1 : 0 , 2 : 1 , } # dictionary to store the tribonacci values computed until the searched value # put your code here return tribo_dict [ n ] tribonacci ( n ) function that generates the Tribonacci serie of n iteratively Parameter n (integer): value to compute the Tribonacci serie on. Return tribo_value (integer): tribonacci of n using the iterative process. Source code in evaluation-on-python-basics\\application.py 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 def tribonacci ( self , n : int ) -> int : \"\"\"function that generates the Tribonacci serie of n iteratively Parameter --------- n (integer): value to compute the Tribonacci serie on. Return ------ tribo_value (integer): tribonacci of n using the iterative process. \"\"\" tribo_dict = { 0 : 0 , 1 : 0 , 2 : 1 , } # dictionary to store the tribonacci values computed until the searched value # put your code here return tribo_dict [ n ] InputReader Bases: ABC The abstract class of a number input reader which could be inherited by other classes. Source code in evaluation-on-python-basics\\application.py 18 19 20 21 22 23 24 25 26 27 28 29 30 class InputReader ( ABC ): \"\"\" The abstract class of a number input reader which could be inherited by other classes. \"\"\" @abstractmethod def get_input ( self ) -> int : \"\"\" Method which reads some kind of input. This method should returns an integer \"\"\" pass get_input () abstractmethod Method which reads some kind of input. This method should returns an integer Source code in evaluation-on-python-basics\\application.py 24 25 26 27 28 29 30 @abstractmethod def get_input ( self ) -> int : \"\"\" Method which reads some kind of input. This method should returns an integer \"\"\" pass StdInputReader Bases: InputReader This class inherits InputReader. and makes reading an integer from the standard input. This class should have one method: - To read input from the keyboard, convert it to integer and return it Source code in evaluation-on-python-basics\\application.py 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 class StdInputReader ( InputReader ): \"\"\" This class inherits InputReader. and makes reading an integer from the standard input. This class should have one method: - To read input from the keyboard, convert it to integer and return it \"\"\" def get_input ( self ) -> int : \"\"\"This function show a message to invite use to type an integer to the keyboard convert it to the integer format and return it. Return ------ keyboard_int_input (integer): number typed by the user. \"\"\" msg = \"Please type the integer you want to compute its tribonacci: \\n >>>\" # message to help user to know what they should type keyboard_int_input = int ( input ( msg )) return keyboard_int_input get_input () This function show a message to invite use to type an integer to the keyboard convert it to the integer format and return it. Return keyboard_int_input (integer): number typed by the user. Source code in evaluation-on-python-basics\\application.py 42 43 44 45 46 47 48 49 50 51 52 53 54 def get_input ( self ) -> int : \"\"\"This function show a message to invite use to type an integer to the keyboard convert it to the integer format and return it. Return ------ keyboard_int_input (integer): number typed by the user. \"\"\" msg = \"Please type the integer you want to compute its tribonacci: \\n >>>\" # message to help user to know what they should type keyboard_int_input = int ( input ( msg )) return keyboard_int_input TextFileInputReader Bases: InputReader This class inherits InputReader and makes reading an integer from a text file. This class should have one attributes: - file_location (String): The location of the input file. This class should have one method: - To read input from the given file location, convert it to integer and return it Source code in evaluation-on-python-basics\\application.py 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 class TextFileInputReader ( InputReader ): \"\"\" This class inherits InputReader and makes reading an integer from a text file. This class should have one attributes: - file_location (String): The location of the input file. This class should have one method: - To read input from the given file location, convert it to integer and return it \"\"\" def __init__ ( self , file_location : str ) -> None : super () . __init__ () self . file_location = file_location def get_input ( self ) -> int : \"\"\"This function read an integer from a file and return it. Return ------ read_int (integer): number read from the file. \"\"\" with open ( self . file_location , \"r\" ) as f : read_int = int ( f . readline ()) return read_int get_input () This function read an integer from a file and return it. Return read_int (integer): number read from the file. Source code in evaluation-on-python-basics\\application.py 74 75 76 77 78 79 80 81 82 83 84 85 def get_input ( self ) -> int : \"\"\"This function read an integer from a file and return it. Return ------ read_int (integer): number read from the file. \"\"\" with open ( self . file_location , \"r\" ) as f : read_int = int ( f . readline ()) return read_int","title":"Reference"},{"location":"doc/#reference","text":"","title":"Reference"},{"location":"doc/#evaluation-on-python-basics.application.Calculator","text":"One method named: tribonacci - one parameter: n - one returned value: tribonacci of n using the recursive process Source code in evaluation-on-python-basics\\application.py 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 class Calculator : \"\"\" One method named: tribonacci - one parameter: n - one returned value: tribonacci of n using the recursive process \"\"\" def tribonacci ( self , n : int ) -> int : \"\"\"function that generates the Tribonacci serie of n using the recursive process Parameter --------- n (integer): value to compute the Tribonacci serie on. Return ------ tribo (integer): tribonacci of n using the recursive process. \"\"\" tribo_dict = { 0 : 0 , 1 : 0 , 2 : 1 , } # dictionary to store the start of the tribonacci serie # put your code here return tribo","title":"Calculator"},{"location":"doc/#evaluation-on-python-basics.application.Calculator.tribonacci","text":"function that generates the Tribonacci serie of n using the recursive process","title":"tribonacci()"},{"location":"doc/#evaluation-on-python-basics.application.Calculator.tribonacci--parameter","text":"n (integer): value to compute the Tribonacci serie on.","title":"Parameter"},{"location":"doc/#evaluation-on-python-basics.application.Calculator.tribonacci--return","text":"tribo (integer): tribonacci of n using the recursive process. Source code in evaluation-on-python-basics\\application.py 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 def tribonacci ( self , n : int ) -> int : \"\"\"function that generates the Tribonacci serie of n using the recursive process Parameter --------- n (integer): value to compute the Tribonacci serie on. Return ------ tribo (integer): tribonacci of n using the recursive process. \"\"\" tribo_dict = { 0 : 0 , 1 : 0 , 2 : 1 , } # dictionary to store the start of the tribonacci serie # put your code here return tribo","title":"Return"},{"location":"doc/#evaluation-on-python-basics.application.CalculatorApp","text":"2 attributes: - a reader of type StdInputReader, or TextFileInputReader - a calculator of type CalculatorIterative or CalculatorRecursive 1 method named calculate: - to calculate the tribonacci of the number returned by the self.reader attribute - using the self.calculator attribute That method should return an integer Source code in evaluation-on-python-basics\\application.py 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 class CalculatorApp : \"\"\" 2 attributes: - a reader of type StdInputReader, or TextFileInputReader - a calculator of type CalculatorIterative or CalculatorRecursive 1 method named calculate: - to calculate the tribonacci of the number returned by the self.reader attribute - using the self.calculator attribute - That method should return an integer \"\"\" def __init__ ( self , reader , calculator ) -> None : self . reader = reader self . calculator = calculator def calculate ( self , ) -> int : \"\"\"function that calculates the tribonacci of the number returned by the self.reader attribute Return ------ tribo (integer): tribonacci value of the value read by the self.reader attribute. \"\"\" # put your code here return tribo","title":"CalculatorApp"},{"location":"doc/#evaluation-on-python-basics.application.CalculatorApp.calculate","text":"function that calculates the tribonacci of the number returned by the self.reader attribute","title":"calculate()"},{"location":"doc/#evaluation-on-python-basics.application.CalculatorApp.calculate--return","text":"tribo (integer): tribonacci value of the value read by the self.reader attribute. Source code in evaluation-on-python-basics\\application.py 166 167 168 169 170 171 172 173 174 175 176 177 178 def calculate ( self , ) -> int : \"\"\"function that calculates the tribonacci of the number returned by the self.reader attribute Return ------ tribo (integer): tribonacci value of the value read by the self.reader attribute. \"\"\" # put your code here return tribo","title":"Return"},{"location":"doc/#evaluation-on-python-basics.application.CalculatorBis","text":"One method named: tribonacci - one parameter: n - one returned value: tribonacci of n using the iterative process Source code in evaluation-on-python-basics\\application.py 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 class CalculatorBis : \"\"\" One method named: tribonacci - one parameter: n - one returned value: tribonacci of n using the iterative process \"\"\" def tribonacci ( self , n : int ) -> int : \"\"\"function that generates the Tribonacci serie of n iteratively Parameter --------- n (integer): value to compute the Tribonacci serie on. Return ------ tribo_value (integer): tribonacci of n using the iterative process. \"\"\" tribo_dict = { 0 : 0 , 1 : 0 , 2 : 1 , } # dictionary to store the tribonacci values computed until the searched value # put your code here return tribo_dict [ n ]","title":"CalculatorBis"},{"location":"doc/#evaluation-on-python-basics.application.CalculatorBis.tribonacci","text":"function that generates the Tribonacci serie of n iteratively","title":"tribonacci()"},{"location":"doc/#evaluation-on-python-basics.application.CalculatorBis.tribonacci--parameter","text":"n (integer): value to compute the Tribonacci serie on.","title":"Parameter"},{"location":"doc/#evaluation-on-python-basics.application.CalculatorBis.tribonacci--return","text":"tribo_value (integer): tribonacci of n using the iterative process. Source code in evaluation-on-python-basics\\application.py 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 def tribonacci ( self , n : int ) -> int : \"\"\"function that generates the Tribonacci serie of n iteratively Parameter --------- n (integer): value to compute the Tribonacci serie on. Return ------ tribo_value (integer): tribonacci of n using the iterative process. \"\"\" tribo_dict = { 0 : 0 , 1 : 0 , 2 : 1 , } # dictionary to store the tribonacci values computed until the searched value # put your code here return tribo_dict [ n ]","title":"Return"},{"location":"doc/#evaluation-on-python-basics.application.InputReader","text":"Bases: ABC The abstract class of a number input reader which could be inherited by other classes. Source code in evaluation-on-python-basics\\application.py 18 19 20 21 22 23 24 25 26 27 28 29 30 class InputReader ( ABC ): \"\"\" The abstract class of a number input reader which could be inherited by other classes. \"\"\" @abstractmethod def get_input ( self ) -> int : \"\"\" Method which reads some kind of input. This method should returns an integer \"\"\" pass","title":"InputReader"},{"location":"doc/#evaluation-on-python-basics.application.InputReader.get_input","text":"Method which reads some kind of input. This method should returns an integer Source code in evaluation-on-python-basics\\application.py 24 25 26 27 28 29 30 @abstractmethod def get_input ( self ) -> int : \"\"\" Method which reads some kind of input. This method should returns an integer \"\"\" pass","title":"get_input()"},{"location":"doc/#evaluation-on-python-basics.application.StdInputReader","text":"Bases: InputReader This class inherits InputReader. and makes reading an integer from the standard input. This class should have one method: - To read input from the keyboard, convert it to integer and return it Source code in evaluation-on-python-basics\\application.py 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 class StdInputReader ( InputReader ): \"\"\" This class inherits InputReader. and makes reading an integer from the standard input. This class should have one method: - To read input from the keyboard, convert it to integer and return it \"\"\" def get_input ( self ) -> int : \"\"\"This function show a message to invite use to type an integer to the keyboard convert it to the integer format and return it. Return ------ keyboard_int_input (integer): number typed by the user. \"\"\" msg = \"Please type the integer you want to compute its tribonacci: \\n >>>\" # message to help user to know what they should type keyboard_int_input = int ( input ( msg )) return keyboard_int_input","title":"StdInputReader"},{"location":"doc/#evaluation-on-python-basics.application.StdInputReader.get_input","text":"This function show a message to invite use to type an integer to the keyboard convert it to the integer format and return it.","title":"get_input()"},{"location":"doc/#evaluation-on-python-basics.application.StdInputReader.get_input--return","text":"keyboard_int_input (integer): number typed by the user. Source code in evaluation-on-python-basics\\application.py 42 43 44 45 46 47 48 49 50 51 52 53 54 def get_input ( self ) -> int : \"\"\"This function show a message to invite use to type an integer to the keyboard convert it to the integer format and return it. Return ------ keyboard_int_input (integer): number typed by the user. \"\"\" msg = \"Please type the integer you want to compute its tribonacci: \\n >>>\" # message to help user to know what they should type keyboard_int_input = int ( input ( msg )) return keyboard_int_input","title":"Return"},{"location":"doc/#evaluation-on-python-basics.application.TextFileInputReader","text":"Bases: InputReader This class inherits InputReader and makes reading an integer from a text file. This class should have one attributes: - file_location (String): The location of the input file. This class should have one method: - To read input from the given file location, convert it to integer and return it Source code in evaluation-on-python-basics\\application.py 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 class TextFileInputReader ( InputReader ): \"\"\" This class inherits InputReader and makes reading an integer from a text file. This class should have one attributes: - file_location (String): The location of the input file. This class should have one method: - To read input from the given file location, convert it to integer and return it \"\"\" def __init__ ( self , file_location : str ) -> None : super () . __init__ () self . file_location = file_location def get_input ( self ) -> int : \"\"\"This function read an integer from a file and return it. Return ------ read_int (integer): number read from the file. \"\"\" with open ( self . file_location , \"r\" ) as f : read_int = int ( f . readline ()) return read_int","title":"TextFileInputReader"},{"location":"doc/#evaluation-on-python-basics.application.TextFileInputReader.get_input","text":"This function read an integer from a file and return it.","title":"get_input()"},{"location":"doc/#evaluation-on-python-basics.application.TextFileInputReader.get_input--return","text":"read_int (integer): number read from the file. Source code in evaluation-on-python-basics\\application.py 74 75 76 77 78 79 80 81 82 83 84 85 def get_input ( self ) -> int : \"\"\"This function read an integer from a file and return it. Return ------ read_int (integer): number read from the file. \"\"\" with open ( self . file_location , \"r\" ) as f : read_int = int ( f . readline ()) return read_int","title":"Return"}]}